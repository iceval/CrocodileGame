// <auto-generated />
using CrocodileGame.DataAccess.PostgreSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CrocodileGame.DataAccess.PostgreSQL.Migrations
{
    [DbContext(typeof(CrocodileGameContext))]
    partial class CrocodileGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CrocodileGame.DataAccess.PostgreSQL.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Word")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Word = "monkey"
                        },
                        new
                        {
                            Id = 2,
                            Word = "ball"
                        },
                        new
                        {
                            Id = 3,
                            Word = "apple"
                        });
                });

            modelBuilder.Entity("CrocodileGame.DataAccess.PostgreSQL.Entities.CardTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<int>("TopicId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("TopicId");

                    b.ToTable("CardTopics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            TopicId = 1
                        },
                        new
                        {
                            Id = 2,
                            CardId = 2,
                            TopicId = 2
                        },
                        new
                        {
                            Id = 3,
                            CardId = 3,
                            TopicId = 3
                        });
                });

            modelBuilder.Entity("CrocodileGame.DataAccess.PostgreSQL.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "animals"
                        },
                        new
                        {
                            Id = 2,
                            Name = "toys"
                        },
                        new
                        {
                            Id = 3,
                            Name = "food"
                        });
                });

            modelBuilder.Entity("CrocodileGame.DataAccess.PostgreSQL.Entities.CardTopic", b =>
                {
                    b.HasOne("CrocodileGame.DataAccess.PostgreSQL.Entities.Card", "Card")
                        .WithMany("CardTopics")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrocodileGame.DataAccess.PostgreSQL.Entities.Topic", "Topic")
                        .WithMany("CardTopics")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("CrocodileGame.DataAccess.PostgreSQL.Entities.Card", b =>
                {
                    b.Navigation("CardTopics");
                });

            modelBuilder.Entity("CrocodileGame.DataAccess.PostgreSQL.Entities.Topic", b =>
                {
                    b.Navigation("CardTopics");
                });
#pragma warning restore 612, 618
        }
    }
}
